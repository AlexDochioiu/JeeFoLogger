apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def logLibraryVersion = "1.0.0"
def logLibraryVersionCode = 3

android {
    compileSdkVersion 27



    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 27
        versionCode logLibraryVersionCode
        versionName logLibraryVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

ext {
    bintrayRepo = 'JLogger' // your repo name
    bintrayName = 'jeefologger' // has to be same as your library module name
    publishedGroupId = 'com.jeefo.android' // your module package name
    libraryName = 'jeefologger'
    artifact = 'jeefologger' // has to be same as your library module name
    libraryDescription = 'Logging library for android which provides the scope dimension for tracing log messages and their sources. It also provides the possibility of adding persistence to all the log messages as well as sticky tags which would appear in every message'
    siteUrl = 'https://github.com/AlexDochioiu/Logger'
    issuesUrl = 'https://github.com/AlexDochioiu/Logger/issues'
    gitUrl = 'https://github.com/AlexDochioiu/Logger.git'
    libLabels = ['Android', 'Logger', 'JeeFoLogger', "JeeFo", "Persistence"]
    libraryVersion = logLibraryVersion
    developerId = 'jeefo'
    developerName = 'AlexDochioiu'
    developerEmail = 'dochioiu.ale@gmail.com'
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId                               // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

version = libraryVersion

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        labels = libLabels
        issueTrackerUrl = issuesUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
